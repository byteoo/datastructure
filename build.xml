<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="datastructure">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../软件/eclipse/"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="JUnit 4.libraryclasspath">
        <pathelement location="${ECLIPSE_HOME}plugins/org.junit_4.12.0.v201504281640/junit.jar"/>
        <pathelement location="${ECLIPSE_HOME}plugins/org.hamcrest.core_1.3.0.v201303031735.jar"/>
    </path>
    <path id="datastructure.classpath">
        <pathelement location="bin"/>
        <path refid="JUnit 4.libraryclasspath"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="datastructure.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="ArrayQueue">
        <java classname="xyz.guqing.queue.ArrayQueue" failonerror="true" fork="yes">
            <classpath refid="datastructure.classpath"/>
        </java>
    </target>
    <target name="ArrayStack">
        <java classname="xyz.guqing.stack.ArrayStack" failonerror="true" fork="yes">
            <classpath refid="datastructure.classpath"/>
        </java>
    </target>
    <target name="AVLTest.before">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="xyz.guqing.tree.test.AVLTest" todir="${junit.output.dir}"/>
            <classpath refid="datastructure.classpath"/>
        </junit>
    </target>
    <target name="AVLTest.test">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="xyz.guqing.tree.test.AVLTest" todir="${junit.output.dir}"/>
            <classpath refid="datastructure.classpath"/>
        </junit>
    </target>
    <target name="AVLTest.testBigTree">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="xyz.guqing.tree.test.AVLTest" todir="${junit.output.dir}"/>
            <classpath refid="datastructure.classpath"/>
        </junit>
    </target>
    <target name="AVLTest.testDelete">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="xyz.guqing.tree.test.AVLTest" todir="${junit.output.dir}"/>
            <classpath refid="datastructure.classpath"/>
        </junit>
    </target>
    <target name="AVLTest.testDelete1">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="xyz.guqing.tree.test.AVLTest" todir="${junit.output.dir}"/>
            <classpath refid="datastructure.classpath"/>
        </junit>
    </target>
    <target name="AVLTest.testDelete2">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="xyz.guqing.tree.test.AVLTest" todir="${junit.output.dir}"/>
            <classpath refid="datastructure.classpath"/>
        </junit>
    </target>
    <target name="AVLTest.testDelete3">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="xyz.guqing.tree.test.AVLTest" todir="${junit.output.dir}"/>
            <classpath refid="datastructure.classpath"/>
        </junit>
    </target>
    <target name="AVLTest.testPut">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="xyz.guqing.tree.test.AVLTest" todir="${junit.output.dir}"/>
            <classpath refid="datastructure.classpath"/>
        </junit>
    </target>
    <target name="AVLTest.testPut1">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="xyz.guqing.tree.test.AVLTest" todir="${junit.output.dir}"/>
            <classpath refid="datastructure.classpath"/>
        </junit>
    </target>
    <target name="AVLTest.testPut2">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="xyz.guqing.tree.test.AVLTest" todir="${junit.output.dir}"/>
            <classpath refid="datastructure.classpath"/>
        </junit>
    </target>
    <target name="AVLTest.testPut3">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="xyz.guqing.tree.test.AVLTest" todir="${junit.output.dir}"/>
            <classpath refid="datastructure.classpath"/>
        </junit>
    </target>
    <target name="BinarySearch">
        <java classname="xyz.guqing.search.BinarySearch" failonerror="true" fork="yes">
            <classpath refid="datastructure.classpath"/>
        </java>
    </target>
    <target name="BinaryTree">
        <java classname="xyz.guqing.tree.BinaryTree" failonerror="true" fork="yes">
            <classpath refid="datastructure.classpath"/>
        </java>
    </target>
    <target name="BSTTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="xyz.guqing.tree.test.BSTTest" todir="${junit.output.dir}"/>
            <classpath refid="datastructure.classpath"/>
        </junit>
    </target>
    <target name="BSTTest.testBST">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="xyz.guqing.tree.test.BSTTest" todir="${junit.output.dir}"/>
            <classpath refid="datastructure.classpath"/>
        </junit>
    </target>
    <target name="BSTTest.testDelete">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="xyz.guqing.tree.test.BSTTest" todir="${junit.output.dir}"/>
            <classpath refid="datastructure.classpath"/>
        </junit>
    </target>
    <target name="BSTTest.testFloorAndCeiling">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="xyz.guqing.tree.test.BSTTest" todir="${junit.output.dir}"/>
            <classpath refid="datastructure.classpath"/>
        </junit>
    </target>
    <target name="BSTTest.testGet">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="xyz.guqing.tree.test.BSTTest" todir="${junit.output.dir}"/>
            <classpath refid="datastructure.classpath"/>
        </junit>
    </target>
    <target name="BSTTest.testInorder">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="xyz.guqing.tree.test.BSTTest" todir="${junit.output.dir}"/>
            <classpath refid="datastructure.classpath"/>
        </junit>
    </target>
    <target name="BSTTest.testKeys">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="xyz.guqing.tree.test.BSTTest" todir="${junit.output.dir}"/>
            <classpath refid="datastructure.classpath"/>
        </junit>
    </target>
    <target name="BSTTest.testMinAndMax">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="xyz.guqing.tree.test.BSTTest" todir="${junit.output.dir}"/>
            <classpath refid="datastructure.classpath"/>
        </junit>
    </target>
    <target name="BSTTest.testRank">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="xyz.guqing.tree.test.BSTTest" todir="${junit.output.dir}"/>
            <classpath refid="datastructure.classpath"/>
        </junit>
    </target>
    <target name="BSTTest.testRankAndSelect">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="xyz.guqing.tree.test.BSTTest" todir="${junit.output.dir}"/>
            <classpath refid="datastructure.classpath"/>
        </junit>
    </target>
    <target name="BSTTest.testSelect">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="xyz.guqing.tree.test.BSTTest" todir="${junit.output.dir}"/>
            <classpath refid="datastructure.classpath"/>
        </junit>
    </target>
    <target name="BubbleSort">
        <java classname="xyz.guqing.sort.BubbleSort" failonerror="true" fork="yes">
            <classpath refid="datastructure.classpath"/>
        </java>
    </target>
    <target name="DoubleLinkedList">
        <java classname="xyz.guqing.linkedlist.DoubleLinkedList" failonerror="true" fork="yes">
            <classpath refid="datastructure.classpath"/>
        </java>
    </target>
    <target name="EightQueen">
        <java classname="xyz.guqing.recursion.EightQueen" failonerror="true" fork="yes">
            <classpath refid="datastructure.classpath"/>
        </java>
    </target>
    <target name="FibonacciSearch">
        <java classname="xyz.guqing.search.FibonacciSearch" failonerror="true" fork="yes">
            <classpath refid="datastructure.classpath"/>
        </java>
    </target>
    <target name="HashTable">
        <java classname="xyz.guqing.hashtable.HashTable" failonerror="true" fork="yes">
            <classpath refid="datastructure.classpath"/>
        </java>
    </target>
    <target name="Helo">
        <java classname="xyz.guqing.hashtable.Helo" failonerror="true" fork="yes">
            <classpath refid="datastructure.classpath"/>
        </java>
    </target>
    <target name="InsertSort">
        <java classname="xyz.guqing.sort.InsertSort" failonerror="true" fork="yes">
            <classpath refid="datastructure.classpath"/>
        </java>
    </target>
    <target name="InterpolationSearch">
        <java classname="xyz.guqing.search.InterpolationSearch" failonerror="true" fork="yes">
            <classpath refid="datastructure.classpath"/>
        </java>
    </target>
    <target name="JosephLinkedList">
        <java classname="xyz.guqing.linkedlist.JosephLinkedList" failonerror="true" fork="yes">
            <classpath refid="datastructure.classpath"/>
        </java>
    </target>
    <target name="LinkedStack">
        <java classname="xyz.guqing.stack.LinkedStack" failonerror="true" fork="yes">
            <classpath refid="datastructure.classpath"/>
        </java>
    </target>
    <target name="Maze">
        <java classname="xyz.guqing.recursion.Maze" failonerror="true" fork="yes">
            <classpath refid="datastructure.classpath"/>
        </java>
    </target>
    <target name="MergeSort">
        <java classname="xyz.guqing.sort.MergeSort" failonerror="true" fork="yes">
            <classpath refid="datastructure.classpath"/>
        </java>
    </target>
    <target name="OrderSearch">
        <java classname="xyz.guqing.search.OrderSearch" failonerror="true" fork="yes">
            <classpath refid="datastructure.classpath"/>
        </java>
    </target>
    <target name="QuickSort">
        <java classname="xyz.guqing.sort.QuickSort" failonerror="true" fork="yes">
            <classpath refid="datastructure.classpath"/>
        </java>
    </target>
    <target name="RadixSort">
        <java classname="xyz.guqing.sort.RadixSort" failonerror="true" fork="yes">
            <classpath refid="datastructure.classpath"/>
        </java>
    </target>
    <target name="RedBlackBSTTest.test">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="xyz.guqing.tree.test.RedBlackBSTTest" todir="${junit.output.dir}"/>
            <classpath refid="datastructure.classpath"/>
        </junit>
    </target>
    <target name="ResizeArray">
        <java classname="xyz.guqing.queue.ResizeArray" failonerror="true" fork="yes">
            <classpath refid="datastructure.classpath"/>
        </java>
    </target>
    <target name="ReversePolish (1)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="xyz.guqing.stack.ReversePolish" todir="${junit.output.dir}"/>
            <classpath refid="datastructure.classpath"/>
        </junit>
    </target>
    <target name="ReversePolish.infixToList">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="xyz.guqing.stack.ReversePolish" todir="${junit.output.dir}"/>
            <classpath refid="datastructure.classpath"/>
        </junit>
    </target>
    <target name="ReversePolish">
        <java classname="xyz.guqing.stack.ReversePolish" failonerror="true" fork="yes">
            <classpath refid="datastructure.classpath"/>
        </java>
    </target>
    <target name="SelectionSort">
        <java classname="xyz.guqing.sort.SelectionSort" failonerror="true" fork="yes">
            <classpath refid="datastructure.classpath"/>
        </java>
    </target>
    <target name="ShellSort">
        <java classname="xyz.guqing.sort.ShellSort" failonerror="true" fork="yes">
            <classpath refid="datastructure.classpath"/>
        </java>
    </target>
    <target name="SingLinkedList">
        <java classname="xyz.guqing.linkedlist.SingLinkedList" failonerror="true" fork="yes">
            <classpath refid="datastructure.classpath"/>
        </java>
    </target>
    <target name="SparseArray">
        <java classname="xyz.guqing.sparsearray.SparseArray" failonerror="true" fork="yes">
            <classpath refid="datastructure.classpath"/>
        </java>
    </target>
    <target name="Task">
        <java classname="xyz.guqing.hashtable.Task" failonerror="true" fork="yes">
            <classpath refid="datastructure.classpath"/>
        </java>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
